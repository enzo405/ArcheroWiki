# Generated by Django 4.1.6 on 2023-05-09 21:08

import calculator.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='promo_code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=False)),
                ('reward_1_type', models.CharField(choices=[('none', 'none'), ('gem', 'gem'), ('celestite_keys', 'celestite_keys'), ('purple_ticket', 'purple_ticket'), ('premium_ticket', 'premium_ticket'), ('gold', 'gold'), ('random_shards', 'random_shards'), ('obsidian_keys', 'obsidian_keys'), ('energy', 'energy'), ('gold_keys', 'gold_keys')], default=' ', max_length=20)),
                ('reward_1_amount', models.CharField(blank=True, default=' ', max_length=10, null=True)),
                ('reward_2_type', models.CharField(choices=[('none', 'none'), ('gem', 'gem'), ('celestite_keys', 'celestite_keys'), ('purple_ticket', 'purple_ticket'), ('premium_ticket', 'premium_ticket'), ('gold', 'gold'), ('random_shards', 'random_shards'), ('obsidian_keys', 'obsidian_keys'), ('energy', 'energy'), ('gold_keys', 'gold_keys')], default=' ', max_length=20)),
                ('reward_2_amount', models.CharField(blank=True, default=' ', max_length=10, null=True)),
                ('reward_3_type', models.CharField(choices=[('none', 'none'), ('gem', 'gem'), ('celestite_keys', 'celestite_keys'), ('purple_ticket', 'purple_ticket'), ('premium_ticket', 'premium_ticket'), ('gold', 'gold'), ('random_shards', 'random_shards'), ('obsidian_keys', 'obsidian_keys'), ('energy', 'energy'), ('gold_keys', 'gold_keys')], default=' ', max_length=20)),
                ('reward_3_amount', models.CharField(blank=True, default=' ', max_length=10, null=True)),
                ('reward_4_type', models.CharField(choices=[('none', 'none'), ('gem', 'gem'), ('celestite_keys', 'celestite_keys'), ('purple_ticket', 'purple_ticket'), ('premium_ticket', 'premium_ticket'), ('gold', 'gold'), ('random_shards', 'random_shards'), ('obsidian_keys', 'obsidian_keys'), ('energy', 'energy'), ('gold_keys', 'gold_keys')], default=' ', max_length=20)),
                ('reward_4_amount', models.CharField(blank=True, default=' ', max_length=10, null=True)),
                ('expire', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='ServerManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isMaintenance', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingame_id', models.CharField(max_length=20, unique=True)),
                ('ingame_name', models.CharField(max_length=30)),
                ('global_atk_save', models.IntegerField(blank=True, default=0)),
                ('global_hp_save', models.IntegerField(blank=True, default=0)),
                ('choosen_hero', models.CharField(choices=[('Atreus', 'Atreus'), ('Urasil', 'Urasil'), ('Phoren', 'Phoren'), ('Taranis', 'Taranis'), ('Helix', 'Helix'), ('Meowgik', 'Meowgik'), ('Shari', 'Shari'), ('Ayana', 'Ayana'), ('Onir', 'Onir'), ('Rolla', 'Rolla'), ('Bonnie', 'Bonnie'), ('Sylvan', 'Sylvan'), ('Shade', 'Shade'), ('Ophelia', 'Ophelia'), ('Ryan', 'Ryan'), ('Lina', 'Lina'), ('Aquea', 'Aquea'), ('Shingen', 'Shingen'), ('Gugu', 'Gugu'), ('Iris', 'Iris'), ('Blazo', 'Blazo'), ('Melinda', 'Melinda'), ('Elaine', 'Elaine'), ('Bobo', 'Bobo'), ('Stella', 'Stella')], default='Atreus', max_length=30)),
                ('brave_privileges_level', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], default=1)),
                ('atk_base_stats_hero_choosen', models.BigIntegerField(default=100, validators=[django.core.validators.MaxValueValidator(6000)])),
                ('health_base_stats_hero_choosen', models.BigIntegerField(default=400, validators=[django.core.validators.MaxValueValidator(20000)])),
                ('public_id', models.BigIntegerField(default=0)),
                ('public_profile', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=255)),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='weapon_skins_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demon_blade_rain_1', models.BooleanField(blank=True, default=False)),
                ('antiquated_sword_1', models.BooleanField(blank=True, default=False)),
                ('gale_force_1', models.BooleanField(blank=True, default=False)),
                ('death_scythe_1', models.BooleanField(blank=True, default=False)),
                ('boomerang_1', models.BooleanField(blank=True, default=False)),
                ('brightspear_1', models.BooleanField(blank=True, default=False)),
                ('saw_blade_1', models.BooleanField(blank=True, default=False)),
                ('brave_bow_1', models.BooleanField(blank=True, default=False)),
                ('stalker_staff_1', models.BooleanField(blank=True, default=False)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=40, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discord_acc_rely', models.CharField(blank=True, default=' ', max_length=40, null=True)),
                ('discord_user_id', models.BigIntegerField(default=0, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='talent_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25)])),
                ('power_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25)])),
                ('recover_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25)])),
                ('block_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25)])),
                ('iron_bulwark_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25)])),
                ('enhanced_equipment_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10)])),
                ('hero_power_up_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10)])),
                ('runes_power_up_level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(15)])),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='stuff_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weapon_choosen', models.CharField(choices=[('None', 'None'), ('Brave Bow', 'Brave Bow'), ('Death Scythe', 'Death Scythe'), ('Saw Blade', 'Saw Blade'), ('Tornado', 'Tornado'), ('Brightspear', 'Brightspear'), ('Stalker Staff', 'Stalker Staff'), ('Gale Force', 'Gale Force'), ('Demon Blade Rain', 'Demon Blade Rain'), ('Mini Atreus', 'Mini Atreus'), ('Antiquated Sword', 'Antiquated Sword')], default='None', max_length=20)),
                ('weapon_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('weapon_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('armor_choosen', models.CharField(choices=[('None', 'None'), ('Phantom Cloak', 'Phantom Cloak'), ('Vest of Dexterity', 'Vest of Dexterity'), ('Golden Chestplate', 'Golden Chestplate'), ('Void Robe', 'Void Robe'), ('Bright Robe', 'Bright Robe'), ('Shadow Robe', 'Shadow Robe')], default='None', max_length=20)),
                ('armor_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('armor_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('ring1_choosen', models.CharField(choices=[('None', 'None'), ('Bear Ring', 'Bear Ring'), ('Wolf Ring', 'Wolf Ring'), ('Falcon Ring', 'Falcon Ring'), ('Serpent Ring', 'Serpent Ring'), ('Bull Ring', 'Bull Ring'), ('Lion Ring', 'Lion Ring'), ('Vilebat Ring', 'Vilebat Ring'), ('Dragon Ring', 'Dragon Ring')], default='None', max_length=20)),
                ('ring1_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('ring1_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('ring2_choosen', models.CharField(choices=[('None', 'None'), ('Bear Ring', 'Bear Ring'), ('Wolf Ring', 'Wolf Ring'), ('Falcon Ring', 'Falcon Ring'), ('Serpent Ring', 'Serpent Ring'), ('Bull Ring', 'Bull Ring'), ('Lion Ring', 'Lion Ring'), ('Vilebat Ring', 'Vilebat Ring'), ('Dragon Ring', 'Dragon Ring')], default='None', max_length=20)),
                ('ring2_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('ring2_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('pet1_choosen', models.CharField(choices=[('None', 'None'), ('Laser Bat', 'Laser Bat'), ('Scythe Mage', 'Scythe Mage'), ('Elf', 'Elf'), ('Living Bomb', 'Living Bomb'), ('Noisy Owl', 'Noisy Owl'), ('Flaming Ghost', 'Flaming Ghost'), ('Bone Warrior', 'Bone Warrior')], default='None', max_length=20)),
                ('pet1_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('pet1_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('pet2_choosen', models.CharField(choices=[('None', 'None'), ('Laser Bat', 'Laser Bat'), ('Scythe Mage', 'Scythe Mage'), ('Elf', 'Elf'), ('Living Bomb', 'Living Bomb'), ('Noisy Owl', 'Noisy Owl'), ('Flaming Ghost', 'Flaming Ghost'), ('Bone Warrior', 'Bone Warrior')], default='None', max_length=20)),
                ('pet2_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('pet2_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('bracelet_choosen', models.CharField(choices=[('None', 'None'), ('Thunder Bracelet', 'Thunder Bracelet'), ('Frozen Bracelet', 'Frozen Bracelet'), ('Blazing Bracelet', 'Blazing Bracelet'), ('Split Bracelet', 'Split Bracelet'), ('Invincible Bracelet', 'Invincible Bracelet'), ('Quickshot Bracelet', 'Quickshot Bracelet'), ('Shield Bracelet', 'Shield Bracelet')], default='None', max_length=20)),
                ('bracelet_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('bracelet_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('locket_choosen', models.CharField(choices=[('None', 'None'), ('Agile Locket', 'Agile Locket'), ('Iron Locket', 'Iron Locket'), ('Angel Locket', 'Angel Locket'), ('Bulletproof Locket', 'Bulletproof Locket'), ('Piercer Locket', 'Piercer Locket'), ('Bloodthirsty Locket', 'Bloodthirsty Locket'), ('Counterattack Locket', 'Counterattack Locket')], default='None', max_length=20)),
                ('locket_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('locket_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('book_choosen', models.CharField(choices=[('None', 'None'), ('Arcane Archer', 'Arcane Archer'), ('Art of Combat', 'Art of Combat'), ('Ice Realm', 'Ice Realm'), ('Enlightenment', 'Enlightenment'), ('Giants Contract', 'Giants Contract'), ('Spectre Book', 'Spectre Book'), ('Arcanum of Time', 'Arcanum of Time')], default='None', max_length=20)),
                ('book_level', models.BigIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(170)])),
                ('book_rarity', models.CharField(choices=[('Common', 'Common'), ('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic'), ('Mythic_1', 'Mythic+1'), ('Mythic_2', 'Mythic+2'), ('Titan Tales', 'Titan Tales'), ('Titan Tales_1', 'Titan Tales+1'), ('Titan Tales_2', 'Titan Tales+2'), ('Titan Tales_3', 'Titan Tales+3'), ('Chaos', 'Chaos')], default='Common', max_length=20)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='skin_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skin_health', models.IntegerField(default=0)),
                ('skin_attack', models.IntegerField(default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='runes_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_line_1', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('flat_dmg_airborne', 'Damage to Airborne Units'), ('var_dmg_airborne', 'Damage to Airborne Units %'), ('flat_dmg_ground', 'Damage to Ground Units'), ('var_dmg_ground', 'Damage to Ground Units %'), ('flat_dmg_melee', 'Damage to Melee Units'), ('var_dmg_melee', 'Damage to Melee Units %'), ('flat_dmg_ranged', 'Damage to Ranged Units'), ('var_dmg_ranged', 'Damage to Ranged Units %'), ('flat_dmg_boss', 'Damage to Bosses Units'), ('var_dmg_boss', 'Damage to Bosses Units %'), ('flat_dmg_mob', 'Damage to Mobs Units'), ('var_dmg_mob', 'Damage to Mobs Units %'), ('var_dmg_hero', 'Damage to Heroes %'), ('var_all_dmg', 'All Damage %'), ('var_elemental_dmg', 'Elemental Damage %'), ('var_atk_speed', 'Attack Speed %'), ('var_crit_rate', 'Critic Chance %'), ('var_crit_dmg', 'Critic Damage %')], default='none', max_length=30)),
                ('power_line_2', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('flat_dmg_airborne', 'Damage to Airborne Units'), ('var_dmg_airborne', 'Damage to Airborne Units %'), ('flat_dmg_ground', 'Damage to Ground Units'), ('var_dmg_ground', 'Damage to Ground Units %'), ('flat_dmg_melee', 'Damage to Melee Units'), ('var_dmg_melee', 'Damage to Melee Units %'), ('flat_dmg_ranged', 'Damage to Ranged Units'), ('var_dmg_ranged', 'Damage to Ranged Units %'), ('flat_dmg_boss', 'Damage to Bosses Units'), ('var_dmg_boss', 'Damage to Bosses Units %'), ('flat_dmg_mob', 'Damage to Mobs Units'), ('var_dmg_mob', 'Damage to Mobs Units %'), ('var_dmg_hero', 'Damage to Heroes %'), ('var_all_dmg', 'All Damage %'), ('var_elemental_dmg', 'Elemental Damage %'), ('var_atk_speed', 'Attack Speed %'), ('var_crit_rate', 'Critic Chance %'), ('var_crit_dmg', 'Critic Damage %')], default='none', max_length=30)),
                ('power_line_3', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('flat_dmg_airborne', 'Damage to Airborne Units'), ('var_dmg_airborne', 'Damage to Airborne Units %'), ('flat_dmg_ground', 'Damage to Ground Units'), ('var_dmg_ground', 'Damage to Ground Units %'), ('flat_dmg_melee', 'Damage to Melee Units'), ('var_dmg_melee', 'Damage to Melee Units %'), ('flat_dmg_ranged', 'Damage to Ranged Units'), ('var_dmg_ranged', 'Damage to Ranged Units %'), ('flat_dmg_boss', 'Damage to Bosses Units'), ('var_dmg_boss', 'Damage to Bosses Units %'), ('flat_dmg_mob', 'Damage to Mobs Units'), ('var_dmg_mob', 'Damage to Mobs Units %'), ('var_dmg_hero', 'Damage to Heroes %'), ('var_all_dmg', 'All Damage %'), ('var_elemental_dmg', 'Elemental Damage %'), ('var_atk_speed', 'Attack Speed %'), ('var_crit_rate', 'Critic Chance %'), ('var_crit_dmg', 'Critic Damage %')], default='none', max_length=30)),
                ('power_line_4', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('flat_dmg_airborne', 'Damage to Airborne Units'), ('var_dmg_airborne', 'Damage to Airborne Units %'), ('flat_dmg_ground', 'Damage to Ground Units'), ('var_dmg_ground', 'Damage to Ground Units %'), ('flat_dmg_melee', 'Damage to Melee Units'), ('var_dmg_melee', 'Damage to Melee Units %'), ('flat_dmg_ranged', 'Damage to Ranged Units'), ('var_dmg_ranged', 'Damage to Ranged Units %'), ('flat_dmg_boss', 'Damage to Bosses Units'), ('var_dmg_boss', 'Damage to Bosses Units %'), ('flat_dmg_mob', 'Damage to Mobs Units'), ('var_dmg_mob', 'Damage to Mobs Units %'), ('var_dmg_hero', 'Damage to Heroes %'), ('var_all_dmg', 'All Damage %'), ('var_elemental_dmg', 'Elemental Damage %'), ('var_atk_speed', 'Attack Speed %'), ('var_crit_rate', 'Critic Chance %'), ('var_crit_dmg', 'Critic Damage %')], default='none', max_length=30)),
                ('power_line_5', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('flat_dmg_airborne', 'Damage to Airborne Units'), ('var_dmg_airborne', 'Damage to Airborne Units %'), ('flat_dmg_ground', 'Damage to Ground Units'), ('var_dmg_ground', 'Damage to Ground Units %'), ('flat_dmg_melee', 'Damage to Melee Units'), ('var_dmg_melee', 'Damage to Melee Units %'), ('flat_dmg_ranged', 'Damage to Ranged Units'), ('var_dmg_ranged', 'Damage to Ranged Units %'), ('flat_dmg_boss', 'Damage to Bosses Units'), ('var_dmg_boss', 'Damage to Bosses Units %'), ('flat_dmg_mob', 'Damage to Mobs Units'), ('var_dmg_mob', 'Damage to Mobs Units %'), ('var_dmg_hero', 'Damage to Heroes %'), ('var_all_dmg', 'All Damage %'), ('var_elemental_dmg', 'Elemental Damage %'), ('var_atk_speed', 'Attack Speed %'), ('var_crit_rate', 'Critic Chance %'), ('var_crit_dmg', 'Critic Damage %')], default='none', max_length=30)),
                ('saviour_line_1', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('flat_trap_resistance', 'Trap Resistance'), ('var_trap_resistance', 'Trap Resistance %'), ('flat_projectile_resistance', 'Projectile Resistance'), ('var_projectile_resistance', 'Projectile Resistance %'), ('flat_collision_resistance', 'Collision Resistance'), ('var_collision_resistance', 'Collision Resistance %'), ('flat_static_resistance', 'Static Resistance'), ('var_static_resistance', 'Static Resistance %'), ('flat_front_resistance', 'Front Resistance'), ('var_front_resistance', 'Front Resistance %'), ('flat_rear_resistance', 'Rear Resistance'), ('var_rear_resistance', 'Rear Resistance %'), ('var_damage_resistance', 'Damage Resistance %'), ('dodge', 'Dodge'), ('var_elemental_resistance', 'Elemental Damage reduced'), ('var_enhanced_eqpm', 'Enhance Equipment %'), ('var_control_resistance', 'Control Resistance %')], default='none', max_length=30)),
                ('saviour_line_2', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('flat_trap_resistance', 'Trap Resistance'), ('var_trap_resistance', 'Trap Resistance %'), ('flat_projectile_resistance', 'Projectile Resistance'), ('var_projectile_resistance', 'Projectile Resistance %'), ('flat_collision_resistance', 'Collision Resistance'), ('var_collision_resistance', 'Collision Resistance %'), ('flat_static_resistance', 'Static Resistance'), ('var_static_resistance', 'Static Resistance %'), ('flat_front_resistance', 'Front Resistance'), ('var_front_resistance', 'Front Resistance %'), ('flat_rear_resistance', 'Rear Resistance'), ('var_rear_resistance', 'Rear Resistance %'), ('var_damage_resistance', 'Damage Resistance %'), ('dodge', 'Dodge'), ('var_elemental_resistance', 'Elemental Damage reduced'), ('var_enhanced_eqpm', 'Enhance Equipment %'), ('var_control_resistance', 'Control Resistance %')], default='none', max_length=30)),
                ('saviour_line_3', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('flat_trap_resistance', 'Trap Resistance'), ('var_trap_resistance', 'Trap Resistance %'), ('flat_projectile_resistance', 'Projectile Resistance'), ('var_projectile_resistance', 'Projectile Resistance %'), ('flat_collision_resistance', 'Collision Resistance'), ('var_collision_resistance', 'Collision Resistance %'), ('flat_static_resistance', 'Static Resistance'), ('var_static_resistance', 'Static Resistance %'), ('flat_front_resistance', 'Front Resistance'), ('var_front_resistance', 'Front Resistance %'), ('flat_rear_resistance', 'Rear Resistance'), ('var_rear_resistance', 'Rear Resistance %'), ('var_damage_resistance', 'Damage Resistance %'), ('dodge', 'Dodge'), ('var_elemental_resistance', 'Elemental Damage reduced'), ('var_enhanced_eqpm', 'Enhance Equipment %'), ('var_control_resistance', 'Control Resistance %')], default='none', max_length=30)),
                ('saviour_line_4', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('flat_trap_resistance', 'Trap Resistance'), ('var_trap_resistance', 'Trap Resistance %'), ('flat_projectile_resistance', 'Projectile Resistance'), ('var_projectile_resistance', 'Projectile Resistance %'), ('flat_collision_resistance', 'Collision Resistance'), ('var_collision_resistance', 'Collision Resistance %'), ('flat_static_resistance', 'Static Resistance'), ('var_static_resistance', 'Static Resistance %'), ('flat_front_resistance', 'Front Resistance'), ('var_front_resistance', 'Front Resistance %'), ('flat_rear_resistance', 'Rear Resistance'), ('var_rear_resistance', 'Rear Resistance %'), ('var_damage_resistance', 'Damage Resistance %'), ('dodge', 'Dodge'), ('var_elemental_resistance', 'Elemental Damage reduced'), ('var_enhanced_eqpm', 'Enhance Equipment %'), ('var_control_resistance', 'Control Resistance %')], default='none', max_length=30)),
                ('saviour_line_5', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('flat_trap_resistance', 'Trap Resistance'), ('var_trap_resistance', 'Trap Resistance %'), ('flat_projectile_resistance', 'Projectile Resistance'), ('var_projectile_resistance', 'Projectile Resistance %'), ('flat_collision_resistance', 'Collision Resistance'), ('var_collision_resistance', 'Collision Resistance %'), ('flat_static_resistance', 'Static Resistance'), ('var_static_resistance', 'Static Resistance %'), ('flat_front_resistance', 'Front Resistance'), ('var_front_resistance', 'Front Resistance %'), ('flat_rear_resistance', 'Rear Resistance'), ('var_rear_resistance', 'Rear Resistance %'), ('var_damage_resistance', 'Damage Resistance %'), ('dodge', 'Dodge'), ('var_elemental_resistance', 'Elemental Damage reduced'), ('var_enhanced_eqpm', 'Enhance Equipment %'), ('var_control_resistance', 'Control Resistance %')], default='none', max_length=30)),
                ('recovery_line_1', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('flat_heal_red_heart', 'Healing Effect of Red Heart'), ('var_heal_red_heart', 'Healing Effect of Red Heart %'), ('flat_hp_drop', 'HP drops'), ('var_hp_drop', 'HP drops %'), ('var_atk_headshot', 'Attack Increased 3s within HeadShot')], default='none', max_length=30)),
                ('recovery_line_2', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('flat_heal_red_heart', 'Healing Effect of Red Heart'), ('var_heal_red_heart', 'Healing Effect of Red Heart %'), ('flat_hp_drop', 'HP drops'), ('var_hp_drop', 'HP drops %'), ('var_atk_headshot', 'Attack Increased 3s within HeadShot')], default='none', max_length=30)),
                ('recovery_line_3', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('flat_heal_red_heart', 'Healing Effect of Red Heart'), ('var_heal_red_heart', 'Healing Effect of Red Heart %'), ('flat_hp_drop', 'HP drops'), ('var_hp_drop', 'HP drops %'), ('var_atk_headshot', 'Attack Increased 3s within HeadShot')], default='none', max_length=30)),
                ('recovery_line_4', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('flat_heal_red_heart', 'Healing Effect of Red Heart'), ('var_heal_red_heart', 'Healing Effect of Red Heart %'), ('flat_hp_drop', 'HP drops'), ('var_hp_drop', 'HP drops %'), ('var_atk_headshot', 'Attack Increased 3s within HeadShot')], default='none', max_length=30)),
                ('recovery_line_5', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('flat_heal_red_heart', 'Healing Effect of Red Heart'), ('var_heal_red_heart', 'Healing Effect of Red Heart %'), ('flat_hp_drop', 'HP drops'), ('var_hp_drop', 'HP drops %'), ('var_atk_headshot', 'Attack Increased 3s within HeadShot')], default='none', max_length=30)),
                ('courage_line_1', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('courage_hero_attack_flat', 'Current Hero Attack'), ('courage_hero_attack_var', 'Current Hero Attack %'), ('courage_hero_hp_flat', 'Current Hero Hp'), ('courage_hero_hp_var', 'Current Hero Hp %'), ('flat_dmg_flame', 'Flame Damage'), ('var_dmg_flame', 'Flame Damage %'), ('flat_dmg_ice', 'Ice Damage'), ('var_dmg_ice', 'Ice Damage %'), ('flat_dmg_poison', 'Poison Damage'), ('var_dmg_poison', 'Poison Damage %'), ('flat_dmg_lightning', 'Lightning Damage'), ('var_dmg_lightning', 'Lightning Damage %'), ('flat_dmg_dark', 'Dark Touch Damage'), ('var_dmg_dark', 'Dark Touch Damage %')], default='none', max_length=30)),
                ('courage_line_2', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('courage_hero_attack_flat', 'Current Hero Attack'), ('courage_hero_attack_var', 'Current Hero Attack %'), ('courage_hero_hp_flat', 'Current Hero Hp'), ('courage_hero_hp_var', 'Current Hero Hp %'), ('flat_dmg_flame', 'Flame Damage'), ('var_dmg_flame', 'Flame Damage %'), ('flat_dmg_ice', 'Ice Damage'), ('var_dmg_ice', 'Ice Damage %'), ('flat_dmg_poison', 'Poison Damage'), ('var_dmg_poison', 'Poison Damage %'), ('flat_dmg_lightning', 'Lightning Damage'), ('var_dmg_lightning', 'Lightning Damage %'), ('flat_dmg_dark', 'Dark Touch Damage'), ('var_dmg_dark', 'Dark Touch Damage %')], default='none', max_length=30)),
                ('courage_line_3', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('courage_hero_attack_flat', 'Current Hero Attack'), ('courage_hero_attack_var', 'Current Hero Attack %'), ('courage_hero_hp_flat', 'Current Hero Hp'), ('courage_hero_hp_var', 'Current Hero Hp %'), ('flat_dmg_flame', 'Flame Damage'), ('var_dmg_flame', 'Flame Damage %'), ('flat_dmg_ice', 'Ice Damage'), ('var_dmg_ice', 'Ice Damage %'), ('flat_dmg_poison', 'Poison Damage'), ('var_dmg_poison', 'Poison Damage %'), ('flat_dmg_lightning', 'Lightning Damage'), ('var_dmg_lightning', 'Lightning Damage %'), ('flat_dmg_dark', 'Dark Touch Damage'), ('var_dmg_dark', 'Dark Touch Damage %')], default='none', max_length=30)),
                ('courage_line_4', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('courage_hero_attack_flat', 'Current Hero Attack'), ('courage_hero_attack_var', 'Current Hero Attack %'), ('courage_hero_hp_flat', 'Current Hero Hp'), ('courage_hero_hp_var', 'Current Hero Hp %'), ('flat_dmg_flame', 'Flame Damage'), ('var_dmg_flame', 'Flame Damage %'), ('flat_dmg_ice', 'Ice Damage'), ('var_dmg_ice', 'Ice Damage %'), ('flat_dmg_poison', 'Poison Damage'), ('var_dmg_poison', 'Poison Damage %'), ('flat_dmg_lightning', 'Lightning Damage'), ('var_dmg_lightning', 'Lightning Damage %'), ('flat_dmg_dark', 'Dark Touch Damage'), ('var_dmg_dark', 'Dark Touch Damage %')], default='none', max_length=30)),
                ('courage_line_5', models.CharField(choices=[('none', 'None'), ('attack_flat', 'Attack'), ('attack_var', 'Attack %'), ('courage_hero_attack_flat', 'Current Hero Attack'), ('courage_hero_attack_var', 'Current Hero Attack %'), ('courage_hero_hp_flat', 'Current Hero Hp'), ('courage_hero_hp_var', 'Current Hero Hp %'), ('flat_dmg_flame', 'Flame Damage'), ('var_dmg_flame', 'Flame Damage %'), ('flat_dmg_ice', 'Ice Damage'), ('var_dmg_ice', 'Ice Damage %'), ('flat_dmg_poison', 'Poison Damage'), ('var_dmg_poison', 'Poison Damage %'), ('flat_dmg_lightning', 'Lightning Damage'), ('var_dmg_lightning', 'Lightning Damage %'), ('flat_dmg_dark', 'Dark Touch Damage'), ('var_dmg_dark', 'Dark Touch Damage %')], default='none', max_length=30)),
                ('luck_line_1', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('counterattack_rate', 'Counterattack Rate'), ('counterattack_dmg', 'Counterattack Damage')], default='none', max_length=30)),
                ('luck_line_2', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('counterattack_rate', 'Counterattack Rate'), ('counterattack_dmg', 'Counterattack Damage')], default='none', max_length=30)),
                ('luck_line_3', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('counterattack_rate', 'Counterattack Rate'), ('counterattack_dmg', 'Counterattack Damage')], default='none', max_length=30)),
                ('luck_line_4', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('counterattack_rate', 'Counterattack Rate'), ('counterattack_dmg', 'Counterattack Damage')], default='none', max_length=30)),
                ('luck_line_5', models.CharField(choices=[('none', 'None'), ('hp_flat', 'Max Hp'), ('hp_var', 'Max Hp %'), ('counterattack_rate', 'Counterattack Rate'), ('counterattack_dmg', 'Counterattack Damage')], default='none', max_length=30)),
                ('value_power_line_1', models.FloatField(default=0)),
                ('value_power_line_2', models.FloatField(default=0)),
                ('value_power_line_3', models.FloatField(default=0)),
                ('value_power_line_4', models.FloatField(default=0)),
                ('value_power_line_5', models.FloatField(default=0)),
                ('value_saviour_line_1', models.FloatField(default=0)),
                ('value_saviour_line_2', models.FloatField(default=0)),
                ('value_saviour_line_3', models.FloatField(default=0)),
                ('value_saviour_line_4', models.FloatField(default=0)),
                ('value_saviour_line_5', models.FloatField(default=0)),
                ('value_recovery_line_1', models.FloatField(default=0)),
                ('value_recovery_line_2', models.FloatField(default=0)),
                ('value_recovery_line_3', models.FloatField(default=0)),
                ('value_recovery_line_4', models.FloatField(default=0)),
                ('value_recovery_line_5', models.FloatField(default=0)),
                ('value_courage_line_1', models.FloatField(default=0)),
                ('value_courage_line_2', models.FloatField(default=0)),
                ('value_courage_line_3', models.FloatField(default=0)),
                ('value_courage_line_4', models.FloatField(default=0)),
                ('value_courage_line_5', models.FloatField(default=0)),
                ('value_luck_line_1', models.FloatField(default=0)),
                ('value_luck_line_2', models.FloatField(default=0)),
                ('value_luck_line_3', models.FloatField(default=0)),
                ('value_luck_line_4', models.FloatField(default=0)),
                ('value_luck_line_5', models.FloatField(default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='relics_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wraith_mask_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('wraith_mask_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('wraith_mask_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(420)])),
                ('clown_mask_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('clown_mask_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('clown_mask_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(420)])),
                ('princess_teddy_bear_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('princess_teddy_bear_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('princess_teddy_bear_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('belt_of_might_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('belt_of_might_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('belt_of_might_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('beastmaster_whistle_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('beastmaster_whistle_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('beastmaster_whistle_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('archmage_robe_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('archmage_robe_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('archmage_robe_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('shimmering_gem_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('shimmering_gem_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('bloom_of_eternity_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('bloom_of_eternity_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('bloom_of_eternity_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('challenger_headband_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('challenger_headband_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('jade_gobelet_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('jade_gobelet_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('jade_gobelet_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('veteran_plate_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('veteran_plate_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('dragonscale_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('dragonscale_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('dragonscale_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1600)])),
                ('dragon_tooth_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('dragon_tooth_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('dragon_tooth_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(420)])),
                ('scholar_telescope_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('scholar_telescope_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('pirate_shank_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('pirate_shank_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('giant_greatsword_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('giant_greatsword_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('giant_greatsword_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(420)])),
                ('healing_potion_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('healing_potion_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('whirlwind_mauler_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('whirlwind_mauler_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('whirlwind_mauler_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(420)])),
                ('special_lance_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('special_lance_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('special_lance_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(420)])),
                ('precision_slingshot_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('precision_slingshot_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('maidens_pearl_earring_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('maidens_pearl_earring_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('ancient_shield_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('ancient_shield_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)], default=0)),
                ('ancient_shield_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(200)])),
                ('supreme_trinity_alpha_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('supreme_trinity_alpha_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('supreme_trinity_alpha_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('golden_apple_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('golden_apple_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('golden_apple_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('ancient_stele_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('ancient_stele_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('ancient_stele_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('philosopher_stone_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('philosopher_stone_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('philosopher_stone_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('dragon_heart_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('dragon_heart_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('dragon_heart_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('spectral_duality_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('spectral_duality_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('spectral_duality_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('mystic_emblem_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('mystic_emblem_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('immortal_brooch_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('immortal_brooch_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('golden_statue_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('golden_statue_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('golden_statue_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('smilling_mask_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('smilling_mask_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('unmerciful_mask_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('unmerciful_mask_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('unmerciful_mask_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('holy_water_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('holy_water_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('holy_water_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('book_of_the_dead_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('book_of_the_dead_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('book_of_the_dead_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('psionist_treasure_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('psionist_treasure_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('book_of_archery_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('book_of_archery_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('book_of_archery_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('book_of_bravery_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('book_of_bravery_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('book_of_bravery_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('angelic_heart_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('angelic_heart_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('angelic_heart_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('devil_whisper_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('devil_whisper_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('devil_whisper_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('stone_of_wisdom_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('stone_of_wisdom_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('empyrean_mirror_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('empyrean_mirror_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('empyrean_mirror_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('fabled_archer_arrow_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('fabled_archer_arrow_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('fabled_archer_arrow_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('shiny_gemmed_belt_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('shiny_gemmed_belt_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('mythril_flux_mail_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('mythril_flux_mail_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('mythril_flux_mail_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(8)])),
                ('stealth_boots_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('stealth_boots_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('stealth_boots_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2200)])),
                ('assassin_dagger_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('assassin_dagger_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('assassin_dagger_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('gold_bunny_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('gold_bunny_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('lucky_coin_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('lucky_coin_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('dusken_cask_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('dusken_cask_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('dragon_eye_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('dragon_eye_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('dragon_eye_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('ring_of_greed_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('ring_of_greed_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('genesis_staff_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('genesis_staff_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('bloodstained_sword_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('bloodstained_sword_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('bloodstained_sword_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(9)])),
                ('starcluster_rage_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('starcluster_rage_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('starcluster_rage_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('elven_king_cape_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('elven_king_cape_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('elven_king_cape_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(600)])),
                ('spear_of_yggdrasil_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('spear_of_yggdrasil_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('spear_of_yggdrasil_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(600)])),
                ('dragon_gem_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('dragon_gem_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('dragon_gem_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(600)])),
                ('life_crown_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('life_crown_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('life_crown_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2720)])),
                ('sand_of_time_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('sand_of_time_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('sand_of_time_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('first_lightning_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('first_lightning_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('oracle_quill_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('oracle_quill_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('oracle_quill_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('bloodthirsty_grail_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('bloodthirsty_grail_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('bloodthirsty_grail_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2720)])),
                ('healing_grail_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('healing_grail_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('healing_grail_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2720)])),
                ('cupids_necklace_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('cupids_necklace_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('life_staff_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('life_staff_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('life_staff_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2000)])),
                ('light_grail_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('light_grail_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('primal_fire_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=0)),
                ('primal_fire_star', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=0)),
                ('primal_fire_effective', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(600)])),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='reforge_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reforge_power', models.IntegerField(choices=[(0, 0), (20, 20), (40, 40), (60, 60), (80, 80), (100, 100), (120, 120), (140, 140), (160, 160), (180, 180), (200, 200), (220, 220), (240, 240), (260, 260), (280, 280), (300, 300), (320, 320), (340, 340), (360, 360), (380, 380), (400, 400), (450, 450), (500, 500), (550, 550), (600, 600), (650, 650), (700, 700), (750, 750), (800, 800), (850, 850), (900, 900), (950, 950), (1000, 1000)], default=0)),
                ('reforge_saviour', models.IntegerField(choices=[(0, 0), (20, 20), (40, 40), (60, 60), (80, 80), (100, 100), (120, 120), (140, 140), (160, 160), (180, 180), (200, 200), (220, 220), (240, 240), (260, 260), (280, 280), (300, 300), (320, 320), (340, 340), (360, 360), (380, 380), (400, 400), (450, 450), (500, 500), (550, 550), (600, 600), (650, 650), (700, 700), (750, 750), (800, 800), (850, 850), (900, 900), (950, 950), (1000, 1000)], default=0)),
                ('reforge_recovery', models.IntegerField(choices=[(0, 0), (20, 20), (40, 40), (60, 60), (80, 80), (100, 100), (120, 120), (140, 140), (160, 160), (180, 180), (200, 200), (220, 220), (240, 240), (260, 260), (280, 280), (300, 300), (320, 320), (340, 340), (360, 360), (380, 380), (400, 400), (450, 450), (500, 500), (550, 550), (600, 600), (650, 650), (700, 700), (750, 750), (800, 800), (850, 850), (900, 900), (950, 950), (1000, 1000)], default=0)),
                ('reforge_courage', models.IntegerField(choices=[(0, 0), (20, 20), (40, 40), (60, 60), (80, 80), (100, 100), (120, 120), (140, 140), (160, 160), (180, 180), (200, 200), (220, 220), (240, 240), (260, 260), (280, 280), (300, 300), (320, 320), (340, 340), (360, 360), (380, 380), (400, 400), (450, 450), (500, 500), (550, 550), (600, 600), (650, 650), (700, 700), (750, 750), (800, 800), (850, 850), (900, 900), (950, 950), (1000, 1000)], default=0)),
                ('reforge_luck', models.IntegerField(choices=[(0, 0), (20, 20), (40, 40), (60, 60), (80, 80), (100, 100), (120, 120), (140, 140), (160, 160), (180, 180), (200, 200), (220, 220), (240, 240), (260, 260), (280, 280), (300, 300), (320, 320), (340, 340), (360, 360), (380, 380), (400, 400), (450, 450), (500, 500), (550, 550), (600, 600), (650, 650), (700, 700), (750, 750), (800, 800), (850, 850), (900, 900), (950, 950), (1000, 1000)], default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='refine_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weapon_refine_atk', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(8000)])),
                ('weapon_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('armor_refine_hp', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25000)])),
                ('armor_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('ring1_refine_atk', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(8000)])),
                ('ring1_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('ring2_refine_atk', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(8000)])),
                ('ring2_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('bracelet_refine_atk', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(8000)])),
                ('bracelet_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('locket_refine_hp', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25000)])),
                ('locket_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('book_refine_hp', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25000)])),
                ('book_refine_basic_stats', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='medals_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medals_1001', models.BooleanField(blank=True, default=False)),
                ('medals_1002', models.BooleanField(blank=True, default=False)),
                ('medals_1003', models.BooleanField(blank=True, default=False)),
                ('medals_1004', models.BooleanField(blank=True, default=False)),
                ('medals_1005', models.BooleanField(blank=True, default=False)),
                ('medals_1006', models.BooleanField(blank=True, default=False)),
                ('medals_1008', models.BooleanField(blank=True, default=False)),
                ('medals_1009', models.BooleanField(blank=True, default=False)),
                ('medals_1010', models.BooleanField(blank=True, default=False)),
                ('medals_1011', models.BooleanField(blank=True, default=False)),
                ('medals_1012', models.BooleanField(blank=True, default=False)),
                ('medals_2001', models.BooleanField(blank=True, default=False)),
                ('medals_2002', models.BooleanField(blank=True, default=False)),
                ('medals_2003', models.BooleanField(blank=True, default=False)),
                ('medals_2004', models.BooleanField(blank=True, default=False)),
                ('medals_2005', models.BooleanField(blank=True, default=False)),
                ('medals_2006', models.BooleanField(blank=True, default=False)),
                ('medals_2007', models.BooleanField(blank=True, default=False)),
                ('medals_2008', models.BooleanField(blank=True, default=False)),
                ('medals_2009', models.BooleanField(blank=True, default=False)),
                ('medals_2010', models.BooleanField(blank=True, default=False)),
                ('medals_2011', models.BooleanField(blank=True, default=False)),
                ('medals_2012', models.BooleanField(blank=True, default=False)),
                ('medals_2013', models.BooleanField(blank=True, default=False)),
                ('medals_2014', models.BooleanField(blank=True, default=False)),
                ('medals_3001', models.BooleanField(blank=True, default=False)),
                ('medals_3002', models.BooleanField(blank=True, default=False)),
                ('medals_3003', models.BooleanField(blank=True, default=False)),
                ('medals_3004', models.BooleanField(blank=True, default=False)),
                ('medals_3005', models.BooleanField(blank=True, default=False)),
                ('medals_3006', models.BooleanField(blank=True, default=False)),
                ('medals_3007', models.BooleanField(blank=True, default=False)),
                ('medals_3008', models.BooleanField(blank=True, default=False)),
                ('medals_3009', models.BooleanField(blank=True, default=False)),
                ('medals_3010', models.BooleanField(blank=True, default=False)),
                ('medals_3019', models.BooleanField(blank=True, default=False)),
                ('medals_3020', models.BooleanField(blank=True, default=False)),
                ('medals_3021', models.BooleanField(blank=True, default=False)),
                ('medals_3022', models.BooleanField(blank=True, default=False)),
                ('medals_3023', models.BooleanField(blank=True, default=False)),
                ('medals_3024', models.BooleanField(blank=True, default=False)),
                ('medals_3025', models.BooleanField(blank=True, default=False)),
                ('medals_3026', models.BooleanField(blank=True, default=False)),
                ('medals_3027', models.BooleanField(blank=True, default=False)),
                ('medals_3028', models.BooleanField(blank=True, default=False)),
                ('medals_3029', models.BooleanField(blank=True, default=False)),
                ('medals_3030', models.BooleanField(blank=True, default=False)),
                ('medals_3034', models.BooleanField(blank=True, default=False)),
                ('medals_3035', models.BooleanField(blank=True, default=False)),
                ('medals_3036', models.BooleanField(blank=True, default=False)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='jewel_type_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weapon_jewel1_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('weapon_jewel2_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('weapon_jewel3_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('weapon_jewel4_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('armor_jewel1_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('armor_jewel2_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('armor_jewel3_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('armor_jewel4_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('ring1_jewel1_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring1_jewel2_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring1_jewel3_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring1_jewel4_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring2_jewel1_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring2_jewel2_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring2_jewel3_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('ring2_jewel4_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('amethyst', 'amethyst')], default='none', max_length=10)),
                ('pet1_jewel1_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('pet1_jewel2_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('pet1_jewel3_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('pet1_jewel4_type', models.CharField(choices=[('none', 'none'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('pet2_jewel1_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('pet2_jewel2_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('pet2_jewel3_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('pet2_jewel4_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('bracelet_jewel1_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('amethyst', 'amethyst'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('bracelet_jewel2_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('amethyst', 'amethyst'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('bracelet_jewel3_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('amethyst', 'amethyst'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('bracelet_jewel4_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('amethyst', 'amethyst'), ('calaite', 'calaite')], default='none', max_length=10)),
                ('locket_jewel1_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('amethyst', 'amethyst'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('locket_jewel2_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('amethyst', 'amethyst'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('locket_jewel3_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('amethyst', 'amethyst'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('locket_jewel4_type', models.CharField(choices=[('none', 'none'), ('amber', 'amber'), ('topaz', 'topaz'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('amethyst', 'amethyst'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('book_jewel1_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('calaite', 'calaite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('book_jewel2_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('calaite', 'calaite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('book_jewel3_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('calaite', 'calaite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('book_jewel4_type', models.CharField(choices=[('none', 'none'), ('lapis', 'lapis'), ('emerald', 'emerald'), ('ruby', 'ruby'), ('kunzite', 'kunzite'), ('calaite', 'calaite'), ('tourmaline', 'tourmaline')], default='none', max_length=10)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='jewel_level_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weapon_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('weapon_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('weapon_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('weapon_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('armor_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('armor_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('armor_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('armor_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring1_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring1_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring1_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring1_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring2_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring2_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring2_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('ring2_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet1_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet1_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet1_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet1_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet2_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet2_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet2_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('pet2_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('bracelet_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('bracelet_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('bracelet_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('bracelet_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('locket_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('locket_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('locket_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('locket_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('book_jewel1_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('book_jewel2_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('book_jewel3_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('book_jewel4_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(13)])),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='hero_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atreus_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('atreus_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('urasil_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('urasil_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('phoren_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('phoren_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('taranis_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('taranis_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('helix_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('helix_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('meowgik_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('meowgik_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('shari_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('shari_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ayana_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('ayana_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('onir_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('onir_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('rolla_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('rolla_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('bonnie_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('bonnie_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('sylvan_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('sylvan_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('shade_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('shade_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ophelia_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('ophelia_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ryan_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('ryan_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('lina_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('lina_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('aquea_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('aquea_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('shingen_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('shingen_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('gugu_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('gugu_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('iris_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('iris_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('blazo_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('blazo_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('melinda_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('melinda_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('elaine_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('elaine_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('bobo_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('bobo_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('stella_level', models.IntegerField(choices=[(120, '120'), (80, '80'), (60, '60'), (40, '40'), (20, '20'), (0, '0')], default=0)),
                ('stella_star', models.IntegerField(choices=[(8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='egg_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('green_bat', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('vase', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('bomb_ghost', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('rock_puppet', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('party_tree', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('wolfhound', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('skeleton_archer', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('skeleton_soldier', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('wasp', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fire_mage', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('medusa', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ice_mage', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fire_lizard', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('flame_ghost', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('thorny_snake', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('tornado_demon', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('piranha', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('zombie', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('scarecrow', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('long_dragon', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('skull_wizard', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('lava_golem', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ice_golem', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('cactus', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('crazy_spider', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fire_element', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('skeleton_swordsman', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('scythe_mage', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('pea_shooter', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('shadow_assassin', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('tornado_mage', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('spitting_mushroom', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('rolling_mushroom', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fallen_bat', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('one_eyed_bat', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('scarlet_mage', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('icefire_phantom', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('purple_phantom', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('tundra_dragon', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('sandian', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('nether_puppet', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('psionic_scarecrow', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('steel_dryad', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('savage_spider', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('flaming_bug', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('shark_bro', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('crimson_zombie', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fat_bat', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('plainswolf', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('elite_archer', models.IntegerField(choices=[(20, '20⭐'), (19, '19⭐'), (18, '18⭐'), (17, '17⭐'), (16, '16⭐'), (15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('little_dragon', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('arch_leader', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('skeleton_king', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('crimson_witch', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('rage_golem', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('queen_bee', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ice_worm', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('medusa_boss', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('ice_demon', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('giant_owl', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fire_demon', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('krab_boss', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('desert_goliath', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('sinister_touch', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('scythe_pharoah', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('fireworm_queen', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('infernal_demon', models.IntegerField(choices=[(15, '15⭐'), (14, '14⭐'), (13, '13⭐'), (12, '12⭐'), (11, '11⭐'), (10, '10⭐'), (9, '9⭐'), (8, '8⭐'), (7, '7⭐'), (6, '6⭐'), (5, '5⭐'), (4, '4⭐'), (3, '3⭐'), (2, '2⭐'), (1, '1⭐'), (0, '0⭐')], default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='egg_equipped_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egg_equipped1', models.CharField(choices=[('Choose', 'Choose'), ('Mobs', (('Vase', 'Vase'), ('Green Bat', 'Green Bat'), ('Rock Puppet', 'Rock Puppet'), ('Bomb Ghost', 'Bomb Ghost'), ('Piranha', 'Piranha'), ('Skeleton Archer', 'Skeleton Archer'), ('Tornado Demon', 'Tornado Demon'), ('Party Tree', 'Party Tree'), ('Wasp', 'Wasp'), ('Wolfhound', 'Wolfhound'), ('Scarecrow', 'Scarecrow'), ('Tornado Mage', 'Tornado Mage'), ('Lava Golem', 'Lava Golem'), ('Skull Wizard', 'Skull Wizard'), ('Cactus', 'Cactus'), ('Ice Mage', 'Ice Mage'), ('Shadow Assassin', 'Shadow Assassin'), ('Fire Lizard', 'Fire Lizard'), ('Fire Mage', 'Fire Mage'), ('Fallen Bat', 'Fallen Bat'), ('Steel Dryad', 'Steel Dryad'), ('Ice Golem', 'Ice Golem'), ('Medusa', 'Medusa'), ('Nether Puppet', 'Nether Puppet'), ('Spitting Mushroom', 'Spitting Mushroom'), ('Psionic Scarecrow', 'Psionic Scarecrow'), ('Pea Shooter', 'Pea Shooter'), ('Scythe Mage', 'Scythe Mage'), ('Rolling Mushroom', 'Rolling Mushroom'), ('Skeleton Swordsman', 'Skeleton Swordsman'), ('Sandian', 'Sandian'), ('Savage Spider', 'Savage Spider'), ('Scarlet Mage', 'Scarlet Mage'), ('Thorny Snake', 'Thorny Snake'), ('Long Dragon', 'Long Dragon'), ('Purple Phantom', 'Purple Phantom'), ('Elite Archer', 'Elite Archer'), ('Flaming Bug', 'Flaming Bug'), ('One-eyed Bat', 'One-eyed Bat'), ('Tundra Dragon', 'Tundra Dragon'), ('Zombie', 'Zombie'), ('Crazy Spider', 'Crazy Spider'), ('Icefire Phantom', 'Icefire Phantom'), ('Skeleton Soldier', 'Skeleton Soldier'), ('Flame Ghost', 'Flame Ghost'), ('Fire Element', 'Fire Element'), ('Shark Bro', 'Shark Bro'), ('Crimson Zombie', 'Crimson Zombie'), ('Fat Bat', 'Fat Bat'), ('Plainswolf', 'Plainswolf'))), ('Boss', (('Little Dragon', 'Little Dragon'), ('Rage Golem', 'Rage Golem'), ('Arch Leader', 'Arch Leader'), ('Krab Boss', 'Krab Boss'), ('Ice Demon', 'Ice Demon'), ('Crimson Witch', 'Crimson Witch'), ('Skeleton King', 'Skeleton King'), ('Giant Owl', 'Giant Owl'), ('Fire Demon', 'Fire Demon'), ('Medusa-Boss', 'Medusa-Boss'), ('Desert Goliath', 'Desert Goliath'), ('Queen Bee', 'Queen Bee'), ('Ice Worm', 'Ice Worm'), ('Sinister Touch', 'Sinister Touch'), ('Scythe Pharoah', 'Scythe Pharoah'), ('Fireworm Queen', 'Fireworm Queen'), ('Infernal Demon', 'Infernal Demon')))], default='Choose', max_length=30)),
                ('egg_equipped2', models.CharField(choices=[('Choose', 'Choose'), ('Mobs', (('Vase', 'Vase'), ('Green Bat', 'Green Bat'), ('Rock Puppet', 'Rock Puppet'), ('Bomb Ghost', 'Bomb Ghost'), ('Piranha', 'Piranha'), ('Skeleton Archer', 'Skeleton Archer'), ('Tornado Demon', 'Tornado Demon'), ('Party Tree', 'Party Tree'), ('Wasp', 'Wasp'), ('Wolfhound', 'Wolfhound'), ('Scarecrow', 'Scarecrow'), ('Tornado Mage', 'Tornado Mage'), ('Lava Golem', 'Lava Golem'), ('Skull Wizard', 'Skull Wizard'), ('Cactus', 'Cactus'), ('Ice Mage', 'Ice Mage'), ('Shadow Assassin', 'Shadow Assassin'), ('Fire Lizard', 'Fire Lizard'), ('Fire Mage', 'Fire Mage'), ('Fallen Bat', 'Fallen Bat'), ('Steel Dryad', 'Steel Dryad'), ('Ice Golem', 'Ice Golem'), ('Medusa', 'Medusa'), ('Nether Puppet', 'Nether Puppet'), ('Spitting Mushroom', 'Spitting Mushroom'), ('Psionic Scarecrow', 'Psionic Scarecrow'), ('Pea Shooter', 'Pea Shooter'), ('Scythe Mage', 'Scythe Mage'), ('Rolling Mushroom', 'Rolling Mushroom'), ('Skeleton Swordsman', 'Skeleton Swordsman'), ('Sandian', 'Sandian'), ('Savage Spider', 'Savage Spider'), ('Scarlet Mage', 'Scarlet Mage'), ('Thorny Snake', 'Thorny Snake'), ('Long Dragon', 'Long Dragon'), ('Purple Phantom', 'Purple Phantom'), ('Elite Archer', 'Elite Archer'), ('Flaming Bug', 'Flaming Bug'), ('One-eyed Bat', 'One-eyed Bat'), ('Tundra Dragon', 'Tundra Dragon'), ('Zombie', 'Zombie'), ('Crazy Spider', 'Crazy Spider'), ('Icefire Phantom', 'Icefire Phantom'), ('Skeleton Soldier', 'Skeleton Soldier'), ('Flame Ghost', 'Flame Ghost'), ('Fire Element', 'Fire Element'), ('Shark Bro', 'Shark Bro'), ('Crimson Zombie', 'Crimson Zombie'), ('Fat Bat', 'Fat Bat'), ('Plainswolf', 'Plainswolf'))), ('Boss', (('Little Dragon', 'Little Dragon'), ('Rage Golem', 'Rage Golem'), ('Arch Leader', 'Arch Leader'), ('Krab Boss', 'Krab Boss'), ('Ice Demon', 'Ice Demon'), ('Crimson Witch', 'Crimson Witch'), ('Skeleton King', 'Skeleton King'), ('Giant Owl', 'Giant Owl'), ('Fire Demon', 'Fire Demon'), ('Medusa-Boss', 'Medusa-Boss'), ('Desert Goliath', 'Desert Goliath'), ('Queen Bee', 'Queen Bee'), ('Ice Worm', 'Ice Worm'), ('Sinister Touch', 'Sinister Touch'), ('Scythe Pharoah', 'Scythe Pharoah'), ('Fireworm Queen', 'Fireworm Queen'), ('Infernal Demon', 'Infernal Demon')))], default='Choose', max_length=30)),
                ('egg_equipped3', models.CharField(choices=[('Choose', 'Choose'), ('Mobs', (('Vase', 'Vase'), ('Green Bat', 'Green Bat'), ('Rock Puppet', 'Rock Puppet'), ('Bomb Ghost', 'Bomb Ghost'), ('Piranha', 'Piranha'), ('Skeleton Archer', 'Skeleton Archer'), ('Tornado Demon', 'Tornado Demon'), ('Party Tree', 'Party Tree'), ('Wasp', 'Wasp'), ('Wolfhound', 'Wolfhound'), ('Scarecrow', 'Scarecrow'), ('Tornado Mage', 'Tornado Mage'), ('Lava Golem', 'Lava Golem'), ('Skull Wizard', 'Skull Wizard'), ('Cactus', 'Cactus'), ('Ice Mage', 'Ice Mage'), ('Shadow Assassin', 'Shadow Assassin'), ('Fire Lizard', 'Fire Lizard'), ('Fire Mage', 'Fire Mage'), ('Fallen Bat', 'Fallen Bat'), ('Steel Dryad', 'Steel Dryad'), ('Ice Golem', 'Ice Golem'), ('Medusa', 'Medusa'), ('Nether Puppet', 'Nether Puppet'), ('Spitting Mushroom', 'Spitting Mushroom'), ('Psionic Scarecrow', 'Psionic Scarecrow'), ('Pea Shooter', 'Pea Shooter'), ('Scythe Mage', 'Scythe Mage'), ('Rolling Mushroom', 'Rolling Mushroom'), ('Skeleton Swordsman', 'Skeleton Swordsman'), ('Sandian', 'Sandian'), ('Savage Spider', 'Savage Spider'), ('Scarlet Mage', 'Scarlet Mage'), ('Thorny Snake', 'Thorny Snake'), ('Long Dragon', 'Long Dragon'), ('Purple Phantom', 'Purple Phantom'), ('Elite Archer', 'Elite Archer'), ('Flaming Bug', 'Flaming Bug'), ('One-eyed Bat', 'One-eyed Bat'), ('Tundra Dragon', 'Tundra Dragon'), ('Zombie', 'Zombie'), ('Crazy Spider', 'Crazy Spider'), ('Icefire Phantom', 'Icefire Phantom'), ('Skeleton Soldier', 'Skeleton Soldier'), ('Flame Ghost', 'Flame Ghost'), ('Fire Element', 'Fire Element'), ('Shark Bro', 'Shark Bro'), ('Crimson Zombie', 'Crimson Zombie'), ('Fat Bat', 'Fat Bat'), ('Plainswolf', 'Plainswolf'))), ('Boss', (('Little Dragon', 'Little Dragon'), ('Rage Golem', 'Rage Golem'), ('Arch Leader', 'Arch Leader'), ('Krab Boss', 'Krab Boss'), ('Ice Demon', 'Ice Demon'), ('Crimson Witch', 'Crimson Witch'), ('Skeleton King', 'Skeleton King'), ('Giant Owl', 'Giant Owl'), ('Fire Demon', 'Fire Demon'), ('Medusa-Boss', 'Medusa-Boss'), ('Desert Goliath', 'Desert Goliath'), ('Queen Bee', 'Queen Bee'), ('Ice Worm', 'Ice Worm'), ('Sinister Touch', 'Sinister Touch'), ('Scythe Pharoah', 'Scythe Pharoah'), ('Fireworm Queen', 'Fireworm Queen'), ('Infernal Demon', 'Infernal Demon')))], default='Choose', max_length=30)),
                ('egg_equipped4', models.CharField(choices=[('Choose', 'Choose'), ('Mobs', (('Vase', 'Vase'), ('Green Bat', 'Green Bat'), ('Rock Puppet', 'Rock Puppet'), ('Bomb Ghost', 'Bomb Ghost'), ('Piranha', 'Piranha'), ('Skeleton Archer', 'Skeleton Archer'), ('Tornado Demon', 'Tornado Demon'), ('Party Tree', 'Party Tree'), ('Wasp', 'Wasp'), ('Wolfhound', 'Wolfhound'), ('Scarecrow', 'Scarecrow'), ('Tornado Mage', 'Tornado Mage'), ('Lava Golem', 'Lava Golem'), ('Skull Wizard', 'Skull Wizard'), ('Cactus', 'Cactus'), ('Ice Mage', 'Ice Mage'), ('Shadow Assassin', 'Shadow Assassin'), ('Fire Lizard', 'Fire Lizard'), ('Fire Mage', 'Fire Mage'), ('Fallen Bat', 'Fallen Bat'), ('Steel Dryad', 'Steel Dryad'), ('Ice Golem', 'Ice Golem'), ('Medusa', 'Medusa'), ('Nether Puppet', 'Nether Puppet'), ('Spitting Mushroom', 'Spitting Mushroom'), ('Psionic Scarecrow', 'Psionic Scarecrow'), ('Pea Shooter', 'Pea Shooter'), ('Scythe Mage', 'Scythe Mage'), ('Rolling Mushroom', 'Rolling Mushroom'), ('Skeleton Swordsman', 'Skeleton Swordsman'), ('Sandian', 'Sandian'), ('Savage Spider', 'Savage Spider'), ('Scarlet Mage', 'Scarlet Mage'), ('Thorny Snake', 'Thorny Snake'), ('Long Dragon', 'Long Dragon'), ('Purple Phantom', 'Purple Phantom'), ('Elite Archer', 'Elite Archer'), ('Flaming Bug', 'Flaming Bug'), ('One-eyed Bat', 'One-eyed Bat'), ('Tundra Dragon', 'Tundra Dragon'), ('Zombie', 'Zombie'), ('Crazy Spider', 'Crazy Spider'), ('Icefire Phantom', 'Icefire Phantom'), ('Skeleton Soldier', 'Skeleton Soldier'), ('Flame Ghost', 'Flame Ghost'), ('Fire Element', 'Fire Element'), ('Shark Bro', 'Shark Bro'), ('Crimson Zombie', 'Crimson Zombie'), ('Fat Bat', 'Fat Bat'), ('Plainswolf', 'Plainswolf'))), ('Boss', (('Little Dragon', 'Little Dragon'), ('Rage Golem', 'Rage Golem'), ('Arch Leader', 'Arch Leader'), ('Krab Boss', 'Krab Boss'), ('Ice Demon', 'Ice Demon'), ('Crimson Witch', 'Crimson Witch'), ('Skeleton King', 'Skeleton King'), ('Giant Owl', 'Giant Owl'), ('Fire Demon', 'Fire Demon'), ('Medusa-Boss', 'Medusa-Boss'), ('Desert Goliath', 'Desert Goliath'), ('Queen Bee', 'Queen Bee'), ('Ice Worm', 'Ice Worm'), ('Sinister Touch', 'Sinister Touch'), ('Scythe Pharoah', 'Scythe Pharoah'), ('Fireworm Queen', 'Fireworm Queen'), ('Infernal Demon', 'Infernal Demon')))], default='Choose', max_length=30)),
                ('egg_equipped5', models.CharField(choices=[('Choose', 'Choose'), ('Mobs', (('Vase', 'Vase'), ('Green Bat', 'Green Bat'), ('Rock Puppet', 'Rock Puppet'), ('Bomb Ghost', 'Bomb Ghost'), ('Piranha', 'Piranha'), ('Skeleton Archer', 'Skeleton Archer'), ('Tornado Demon', 'Tornado Demon'), ('Party Tree', 'Party Tree'), ('Wasp', 'Wasp'), ('Wolfhound', 'Wolfhound'), ('Scarecrow', 'Scarecrow'), ('Tornado Mage', 'Tornado Mage'), ('Lava Golem', 'Lava Golem'), ('Skull Wizard', 'Skull Wizard'), ('Cactus', 'Cactus'), ('Ice Mage', 'Ice Mage'), ('Shadow Assassin', 'Shadow Assassin'), ('Fire Lizard', 'Fire Lizard'), ('Fire Mage', 'Fire Mage'), ('Fallen Bat', 'Fallen Bat'), ('Steel Dryad', 'Steel Dryad'), ('Ice Golem', 'Ice Golem'), ('Medusa', 'Medusa'), ('Nether Puppet', 'Nether Puppet'), ('Spitting Mushroom', 'Spitting Mushroom'), ('Psionic Scarecrow', 'Psionic Scarecrow'), ('Pea Shooter', 'Pea Shooter'), ('Scythe Mage', 'Scythe Mage'), ('Rolling Mushroom', 'Rolling Mushroom'), ('Skeleton Swordsman', 'Skeleton Swordsman'), ('Sandian', 'Sandian'), ('Savage Spider', 'Savage Spider'), ('Scarlet Mage', 'Scarlet Mage'), ('Thorny Snake', 'Thorny Snake'), ('Long Dragon', 'Long Dragon'), ('Purple Phantom', 'Purple Phantom'), ('Elite Archer', 'Elite Archer'), ('Flaming Bug', 'Flaming Bug'), ('One-eyed Bat', 'One-eyed Bat'), ('Tundra Dragon', 'Tundra Dragon'), ('Zombie', 'Zombie'), ('Crazy Spider', 'Crazy Spider'), ('Icefire Phantom', 'Icefire Phantom'), ('Skeleton Soldier', 'Skeleton Soldier'), ('Flame Ghost', 'Flame Ghost'), ('Fire Element', 'Fire Element'), ('Shark Bro', 'Shark Bro'), ('Crimson Zombie', 'Crimson Zombie'), ('Fat Bat', 'Fat Bat'), ('Plainswolf', 'Plainswolf'))), ('Boss', (('Little Dragon', 'Little Dragon'), ('Rage Golem', 'Rage Golem'), ('Arch Leader', 'Arch Leader'), ('Krab Boss', 'Krab Boss'), ('Ice Demon', 'Ice Demon'), ('Crimson Witch', 'Crimson Witch'), ('Skeleton King', 'Skeleton King'), ('Giant Owl', 'Giant Owl'), ('Fire Demon', 'Fire Demon'), ('Medusa-Boss', 'Medusa-Boss'), ('Desert Goliath', 'Desert Goliath'), ('Queen Bee', 'Queen Bee'), ('Ice Worm', 'Ice Worm'), ('Sinister Touch', 'Sinister Touch'), ('Scythe Pharoah', 'Scythe Pharoah'), ('Fireworm Queen', 'Fireworm Queen'), ('Infernal Demon', 'Infernal Demon')))], default='Choose', max_length=30)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='dragon_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dragon1_type', models.CharField(choices=[('None', 'None'), ('Glacion', 'Glacion'), ('Infernox', 'Infernox'), ('Stormra', 'Stormra'), ('Noxion', 'Noxion'), ('Shadex', 'Shadex'), ('Jadeon', 'Jadeon'), ('Dominus', 'Dominus'), ('Ferron', 'Ferron'), ('Geogon', 'Geogon'), ('Swordian', 'Swordian'), ('Necrogon', 'Necrogon'), ('Starrite', 'Starrite'), ('Voideon', 'Voideon')], default='Glacion', max_length=30)),
                ('dragon2_type', models.CharField(choices=[('None', 'None'), ('Glacion', 'Glacion'), ('Infernox', 'Infernox'), ('Stormra', 'Stormra'), ('Noxion', 'Noxion'), ('Shadex', 'Shadex'), ('Jadeon', 'Jadeon'), ('Dominus', 'Dominus'), ('Ferron', 'Ferron'), ('Geogon', 'Geogon'), ('Swordian', 'Swordian'), ('Necrogon', 'Necrogon'), ('Starrite', 'Starrite'), ('Voideon', 'Voideon')], default='Infernox', max_length=30)),
                ('dragon3_type', models.CharField(choices=[('None', 'None'), ('Glacion', 'Glacion'), ('Infernox', 'Infernox'), ('Stormra', 'Stormra'), ('Noxion', 'Noxion'), ('Shadex', 'Shadex'), ('Jadeon', 'Jadeon'), ('Dominus', 'Dominus'), ('Ferron', 'Ferron'), ('Geogon', 'Geogon'), ('Swordian', 'Swordian'), ('Necrogon', 'Necrogon'), ('Starrite', 'Starrite'), ('Voideon', 'Voideon')], default='Stormra', max_length=30)),
                ('dragon1_rarity', models.CharField(choices=[('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic')], default='Great', max_length=30)),
                ('dragon2_rarity', models.CharField(choices=[('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic')], default='Great', max_length=30)),
                ('dragon3_rarity', models.CharField(choices=[('Great', 'Great'), ('Rare', 'Rare'), ('Epic', 'Epic'), ('Perfect Epic', 'Perfect Epic'), ('Legendary', 'Legendary'), ('Ancient Legendary', 'Ancient Legendary'), ('Mythic', 'Mythic')], default='Great', max_length=30)),
                ('dragon1_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('dragon2_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('dragon3_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('dragon_1_boost_1', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_1_boost_2', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_1_boost_3', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_1_boost_4', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_2_boost_1', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_2_boost_2', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_2_boost_3', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_2_boost_4', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_3_boost_1', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_3_boost_2', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_3_boost_3', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('dragon_3_boost_4', models.IntegerField(choices=[(10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='dmg_calc_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hero_atk', models.JSONField(default=dict)),
                ('missing_data', models.CharField(default='none', max_length=20, null=True)),
                ('weapon_coeff', models.FloatField(default=1.0)),
                ('flat_dmg_vs_ground', models.IntegerField(default=0)),
                ('flat_dmg_vs_airborne', models.IntegerField(default=0)),
                ('flat_dmg_vs_melee', models.IntegerField(default=0)),
                ('flat_dmg_vs_range', models.IntegerField(default=0)),
                ('flat_dmg_vs_mobs', models.IntegerField(default=0)),
                ('flat_dmg_vs_boss', models.IntegerField(default=0)),
                ('flat_dmg_element', models.IntegerField(default=0)),
                ('flat_dmg_all', models.IntegerField(default=0)),
                ('flat_elite_dmg', models.IntegerField(default=0)),
                ('flat_normal_dmg', models.IntegerField(default=0)),
                ('var_dmg_vs_ground', models.FloatField(default=0)),
                ('var_dmg_vs_airborne', models.FloatField(default=0)),
                ('var_dmg_vs_melee', models.FloatField(default=0)),
                ('var_dmg_vs_range', models.FloatField(default=0)),
                ('var_dmg_vs_mobs', models.FloatField(default=0)),
                ('var_dmg_vs_boss', models.FloatField(default=0)),
                ('var_dmg_element', models.FloatField(default=0)),
                ('var_dmg_all', models.FloatField(default=0)),
                ('var_normal_dmg', models.FloatField(default=0)),
                ('var_elite_dmg', models.FloatField(default=0)),
                ('crit_dmg', models.IntegerField(default=0)),
                ('crit_rate', models.FloatField(default=0)),
                ('dodge_rate', models.FloatField(default=0)),
                ('weapon_damage', models.FloatField(default=0)),
                ('weapon_melee_damage', models.FloatField(default=0)),
                ('weapon_ranged_damage', models.FloatField(default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
        migrations.CreateModel(
            name='altar_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stuff_altar_level', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(120)])),
                ('stuff_altar_ascension', models.IntegerField(choices=[(12, 12), (11, 11), (10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('heros_altar_level', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(120)])),
                ('heros_altar_ascension', models.IntegerField(choices=[(12, 12), (11, 11), (10, 10), (9, 9), (8, 8), (7, 7), (6, 6), (5, 5), (4, 4), (3, 3), (2, 2), (1, 1), (0, 0)], default=0)),
                ('user_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.user')),
            ],
            bases=(models.Model, calculator.models.parentModel),
        ),
    ]
